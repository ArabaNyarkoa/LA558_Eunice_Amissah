filter(CNTY_NM %in% c("Harris", "Uvalde", "Fayette"))
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection1,
color = "#800080", fillColor = "yellow", weight = 2, opacity = 0.5)
txmap
carCount_selection2 <- carCount %>%
filter(is.na(count) | !count > 0)
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection2,
color = "#000", fillColor = "darkgreen", weight = 1,
opacity = 0.75, fillOpacity = 0.8)
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection2,
color = "#000", fillColor = "darkgreen", weight = 1,
opacity = 0.75, fillOpacity = 0.8) %>%
addPolygons(data = carCount_selection1,
color = "#800080", fillColor = "yellow", weight = 5,
opacity = 0.75, fillOpacity = 0.8)
txmap
carCount <- carCount %>%
replace(is.na(.), 0)
View(carCount)
library("RColorBrewer")
display.brewer.all()
bins <- c(0, 2, 4, 6, 8, 10, 12, 14, Inf)
pal <- colorBin("BuPu", domain = carCount$count, bins = bins)
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8)
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,  #be careful, you need to switch the ) to a comma
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE)
)
txmap
labels <- sprintf(
"<strong>%s</strong><br/>%g cars",
carCount$CNTY_NM, carCount$count
) %>% lapply(htmltools::HTML)
longitude<- c(-95.4,-96.7, -97.7)
latitude<- c(29.7, 32.7, 30.3)
df <- data.frame(longitude, latitude)
df_sf = st_as_sf(df, coords = c("longitude", "latitude"), crs = 4326)
bounds <- carCount %>%
st_bbox() %>%
as.character()
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
txmap
txmap %>% addLegend(pal = pal, values = count, opacity = 0.7, title = "Cars",
position = "bottomright")
bounds <- df_sf %>%
st_bbox() %>%
as.character()
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf)
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
longitude<- c(-95.4,-96.7, -97.7)
latitude<- c(29.7, 32.7, 30.3)
df <- data.frame(longitude, latitude)
df_sf = st_as_sf(df, coords = c("longitude", "latitude"), crs = 4326)
View(df_sf)
View(df)
View(df_sf)
bounds <- df_sf %>%
st_bbox() %>%
as.character()
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf) %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
txmap
fitBounds(txmap, -106.630888, 31.980960, -94.064043, 33.578604,)
txmap
bounds <- df_sf %>%
st_bbox() %>%
as.character()
bounds <- df_sf %>%
st_bbox() %>%
as.character()
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4])
bounds <- carCount %>%
st_bbox() %>%
as.character()
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4])
bounds <- carCount %>%
st_bbox() %>%
as.character()
library(leaflet)
library(leaflet.providers)
library(tidyverse)
CarRally100 <- read.csv("CarRally100.csv", header = TRUE)
CarRally1000 <- read.csv("CarRally1000.csv", header = TRUE)
CarData <- CarRally100
map <- leaflet(CarData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = CarData$car_make)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year))
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year), weight = 8, radius=1000,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
map <- leaflet(CarData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.Terrain", group = "Terrain",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("Thunderforest.Landscape", group = "Landscape") %>%
addLayersControl(baseGroups = c("OSM", "Terrain", "Water Color", "Street", "Mapnik", "Landscape"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Shirt Size: ",
CarData$car_year), weight = 8, radius=40,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
CarData <-CarRally1000
map <- leaflet(CarData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(CarData[1:200,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(CarData[1:200,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
map <- leaflet(CarData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
map <- leaflet(CarData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.Terrain", group = "Terrain",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("Thunderforest.Landscape", group = "Landscape") %>%
addLayersControl(baseGroups = c("OSM", "Terrain", "Water Color", "Street", "Mapnik", "Landscape"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Shirt Size: ",
CarData$car_year), weight = 8, radius=40,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
map <- leaflet(CarData[1:200,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(CarData[1:200,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year), weight = 8, radius=1000,
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year), weight = 8, radius=1000,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year), weight = 8, radius=1000,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year))
map
library(leaflet)
library(leaflet.providers)
library(tidyverse)
CarRally100 <- read.csv("CarRally100.csv", header = TRUE)
CarRally1000 <- read.csv("CarRally1000.csv", header = TRUE)
CarData <- CarRally100
map <- leaflet(CarData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
ma
map <- leaflet(CarData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = CarData$car_make)
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year))
map
map <- leaflet(CarData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
CarData$first_name, "</strong><br>", "Car Model Year: ",
CarData$car_year), weight = 8, radius=1000,
color="purple", stroke = TRUE, fillOpacity = 1.0)
map
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf) %>%
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4]) %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto")) %>% addLegend(pal = pal, values = count, opacity = 0.7, title = "Cars",
position = "bottomright")
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf) %>%
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4]) %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
txmap
library(leaflet)
library(leaflet.providers)
library(tidyverse)
library(readxl)
library(sf)
carCount<- st_read("TXCarRally.shp")
carCount <- st_transform(carCount, crs = 4326)
carCount <- carCount %>% rename(count = first_name)
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
color = "purple", fill = NA, weight = 2)
txmap
carCount_selection1 <- carCount %>%
filter(CNTY_NM %in% c("Harris", "Uvalde", "Fayette"))
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection1,
color = "#800080", fillColor = "yellow", weight = 2, opacity = 0.5)
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection1,
color = "#800080", fillColor = "yellow", weight = 2, opacity = 0.5)
txmap
carCount_selection2 <- carCount %>%
filter(is.na(count) | !count > 0)
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection2,
color = "#000", fillColor = "darkgreen", weight = 1,
opacity = 0.75, fillOpacity = 0.8)
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount_selection2,
color = "#000", fillColor = "darkgreen", weight = 1,
opacity = 0.75, fillOpacity = 0.8) %>%
addPolygons(data = carCount_selection1,
color = "#800080", fillColor = "yellow", weight = 5,
opacity = 0.75, fillOpacity = 0.8)
txmap
carCount <- carCount %>%
replace(is.na(.), 0)
library("RColorBrewer")
display.brewer.all()
bins <- c(0, 2, 4, 6, 8, 10, 12, 14, Inf)
pal <- colorBin("BuPu", domain = carCount$count, bins = bins)
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8)
txmap
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,  #be careful, you need to switch the ) to a comma
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE)
)
txmap
labels <- sprintf(
"<strong>%s</strong><br/>%g cars",
carCount$CNTY_NM, carCount$count
) %>% lapply(htmltools::HTML)
longitude<- c(-95.4,-96.7, -97.7)
latitude<- c(29.7, 32.7, 30.3)
df <- data.frame(longitude, latitude)
df_sf = st_as_sf(df, coords = c("longitude", "latitude"), crs = 4326)
fitBounds(txmap, -106.630888, 31.980960, -94.064043, 33.578604,)
txmap
bounds <- df_sf %>%
st_bbox() %>%
as.character()
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4])
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf) %>%
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4]) %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
txmap
bounds <- carCount %>%
st_bbox() %>%
as.character()
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4])
txmap <- leaflet() %>%
setView(-99.5, 32.2, 5)  %>%
addTiles() %>%
addMarkers(data = df_sf) %>%
fitBounds(txmap, bounds[1], bounds[2], bounds[3], bounds[4]) %>%
addPolygons(data = carCount,
fillColor = ~pal(count),
weight = 0.5,
opacity = 1,
color = "grey",
dashArray = "1",
fillOpacity = 0.8,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto"))
txmap
